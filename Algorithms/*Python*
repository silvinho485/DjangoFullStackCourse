Python 3.5.4 (default, Oct  9 2017, 12:07:29) 
[GCC 6.4.1 20170727 (Red Hat 6.4.1-1)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> 
>>> 
>>> 
>>> second_lowest
('Berry', 37.21)
>>> Harry
Berry
>>> a = "Silvio Machado"
>>> a
'Silvio Machado'
>>> a.upper()
'SILVIO MACHADO'
>>> a
'Silvio Machado'
>>> a.lower()
'silvio machado'
>>> a[1]
'i'
>>> a[0]
'S'
>>> a[0] is lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lower' is not defined
>>> a[0] is lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lower' is not defined
>>> a[0]
'S'
>>> a[0].lower()
's'
>>> a[0] is .lower()
  File "<stdin>", line 1
    a[0] is .lower()
            ^
SyntaxError: invalid syntax
>>> a[0] isupper()
  File "<stdin>", line 1
    a[0] isupper()
               ^
SyntaxError: invalid syntax
>>> a[0].isupper()
True
>>> a[1].isupper()
False
>>> a[1].islow()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'islow'
>>> a[1].islower()
True
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 4
    string = [leterfor letter in string if letter.isuper() lambda x:x.lower]
                            ^
SyntaxError: invalid syntax
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 4
    string = [(leter) for letter in string if letter.isuper() lambda x:x.lower]
                                                                   ^
SyntaxError: invalid syntax
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 4
    string = [(leter) for letter in string if letter.isuper() lambda x:x.lower()]
                                                                   ^
SyntaxError: invalid syntax
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 4
    string = [(leter) for letter in string lambda x:x.lower()]
                                                ^
SyntaxError: invalid syntax
>>> a
'Silvio Machado'
>>> a[1].isuper()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'isuper'
>>> a[1].isupper()
False
>>> for line in len(a):
...     print(a[line])
... 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not iterable
>>> for line in range(len(a)):
...     print(a[line])
... 
S
i
l
v
i
o
 
M
a
c
h
a
d
o
>>> swap_case("Silvio)
  File "<stdin>", line 1
    swap_case("Silvio)
                     ^
SyntaxError: EOL while scanning string literal
>>> swap_case("Silvio")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 5, in swap_case
    if line.isupper():
AttributeError: 'int' object has no attribute 'isupper'
>>> swap_case("Silvio")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 6, in swap_case
    string[line] = string[line].lower()
TypeError: 'str' object does not support item assignment
>>> a = "Silvio"
>>> a[0] = a[0].lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> a[0] = a[0].lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> a[0]
'S'
>>> a[0].lower()
's'
>>> a[0] = a[0].lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> a[0] = lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lower' is not defined
>>> a[0].lower
<built-in method lower of str object at 0x7f50d49e18f0>
>>> a[0] = lower
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lower' is not defined
>>> a[0] = lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lower' is not defined
>>> a[0] = lowercase
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lowercase' is not defined
>>> a[0] = a[0].lower
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> a[0] = a[0].lower()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> print(swap_case("Sil"))
Sil
>>> a
'Silvio'
>>> a = [(x.upper()) for x in a]
>>> a
['S', 'I', 'L', 'V', 'I', 'O']
>>> a = [(x.upper()) for x in a if x.islower()]
>>> a
[]
>>> a="Silvio"
>>> a = [(x.upper()) for x in a if x.islower()]
>>> a
['I', 'L', 'V', 'I', 'O']
>>> a="Silvio"
>>> a = [(x.upper()if x.islower() else x.lower()) for x in a]
>>> a
['s', 'I', 'L', 'V', 'I', 'O']
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/smachado/Documents/DjangoFullStackDevCourse/Projectfolder/Algorithms/sWAP_cASE.py", line 4
    return string = [(x.lower() if x.isupper() else x.upper()) for x in string]
                  ^
SyntaxError: invalid syntax
>>> print(swap_case("AAAAbbb"))
AAAAbbb
>>> print(swap_case("AAAAbbb"))
['a', 'a', 'a', 'a', 'B', 'B', 'B']
>>> print(swap_case("AAAbbb"))
aaaBBB
>>> Digite algoUUUUllll
uuuuLLLL
>>> uuuuLLLL
>>> 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'uuuuLLLL' is not defined
>>>   File "<stdin>", line 1
    >>> 
     ^
SyntaxError: invalid syntax
>>> 

>>> 